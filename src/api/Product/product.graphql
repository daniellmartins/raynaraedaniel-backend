enum MutationType {
  CREATED
  UPDATED
  DELETED
}

enum ProductOrderByInput {
  name_ASC
  price_ASC
  price_DESC
}

type Query {
  product(where: ProductWhereUniqueInput!): Product
  products(orderBy: ProductOrderByInput): [Product!]
}

type Mutation {
  createProduct(data: ProductCreateInput): Product!
  updateProduct(
    data: ProductUpdateInput
    where: ProductWhereUniqueInput!
  ): Product
  deleteProduct(where: ProductWhereUniqueInput!): Product
}

type Subscription {
  product: ProductSubscriptionPayload
}

type ProductSubscriptionPayload {
  mutation: MutationType!
  node: Product
}

type Product {
  _id: ID!
  name: String!
  description: String
  photoUrl: String
  price: Float!
  quantity: Int!
  stock: Int!
  reserved: Boolean!
  active: Boolean
  cart: Cart
  createdAt: DateTime
  updatedAt: DateTime
}

input ProductCreateInput {
  name: String!
  description: String
  photoUrl: String
  price: Float!
  quantity: Int
  stock: Int
  reserved: Boolean
  active: Boolean
}

input ProductUpdateInput {
  name: String
  description: String
  photoUrl: String
  price: Float
  quantity: Int
  stock: Int
  reserved: Boolean
  active: Boolean
}

input ProductWhereUniqueInput {
  _id: ID
}

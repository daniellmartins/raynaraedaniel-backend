enum MutationType {
  CREATED
  UPDATED
  DELETED
}

enum ProductOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  quantity_ASC
  quantity_DESC
  active_ASC
  active_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type Query {
  product(where: ProductWhereUniqueInput!): Product
  products(orderBy: ProductOrderByInput): [Product!]
}

type Mutation {
  createProduct(data: ProductCreateInput): Product!
  updateProduct(
    data: ProductUpdateInput
    where: ProductWhereUniqueInput!
  ): Product
  deleteProduct(where: ProductWhereUniqueInput!): Product
}

# type Subscription {
#   product: ProductSubscriptionPayload
# }

type ProductSubscriptionPayload {
  mutation: MutationType!
  node: Product
  updatedFields: [String!]
  previousValues: ProductPreviousValues
}

type Product {
  _id: ID!
  name: String!
  description: String
  price: Float!
  quantity: Int!
  photoUrl: String
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
}

input ProductCreateInput {
  name: String!
  description: String
  price: Float!
  quantity: Int!
  photoUrl: String
  active: Boolean
}

input ProductUpdateInput {
  name: String
  description: String
  price: Float
  quantity: Int
  photoUrl: String
  active: Boolean
}

input ProductWhereUniqueInput {
  _id: ID
}

type ProductPreviousValues {
  _id: ID!
  name: String!
  description: String
  price: Float!
  quantity: Int!
  photoUrl: String
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}
